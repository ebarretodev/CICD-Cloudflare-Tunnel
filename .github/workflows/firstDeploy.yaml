name: Remote Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Npm Install
        run: npm i

      - name: Configure SSH connection
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: | 
          set -x
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # instala o cloudflared
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
          sudo dpkg -i cloudflared.deb

          # cria config SSH usando ProxyCommand via cloudflared
          cat <<EOF > ~/.ssh/config
          Host ${{ secrets.SSH_HOST }}
            HostName ${{ secrets.SSH_HOST }}
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/id_ed25519
            ProxyCommand cloudflared access ssh --hostname ${{ secrets.SSH_HOST }}
            IdentitiesOnly yes
          EOF

          chmod 600 ~/.ssh/config

          # adiciona host no known_hosts
          ssh-keyscan -t ed25519 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

          # inicia o agente e adiciona a chave
          eval "$(ssh-agent -a $SSH_AUTH_SOCK)"
          printf "%s\n" "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-add ~/.ssh/id_ed25519

          

      - name: Deploy
        run: npm run deploy
        env:
          DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
